{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\\\\test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\",\"filename\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\\\\test\\\\task.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"const request = require('supertest');\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst taskRoutes = require('../routes/tasks');\nconst sequelize = require('../config/db');\nconst Task = require('../models/Task');\nconst {\n  expect\n} = require('chai');\nconst app = express();\napp.use(bodyParser.json());\napp.use('/tasks', taskRoutes);\ndescribe('Tasks API', () => {\n  before(async () => {\n    await sequelize.sync({\n      force: true\n    });\n  });\n\n  //limpia la DB de testing\n  beforeEach(async () => {\n    await Task.destroy({\n      where: {}\n    });\n  });\n  it('should get all tasks', async () => {\n    await Task.create({\n      name: 'Test Task 1'\n    });\n    await Task.create({\n      name: 'Test Task 2'\n    });\n    const response = await request(app).get('/tasks');\n    expect(response.status).to.equal(200);\n    expect(response.body.length).to.equal(2);\n  });\n  it('should create a new task', async () => {\n    const response = await request(app).post('/tasks').send({\n      name: 'New Task'\n    });\n    expect(response.status).to.equal(201);\n    expect(response.body.name).to.equal('New Task');\n  });\n  it('should delete a task', async () => {\n    const task = await Task.create({\n      name: 'Task to Delete'\n    });\n    const response = await request(app).delete(`/tasks/${task.id}`);\n    expect(response.status).to.equal(200);\n    const tasks = await Task.findAll();\n    expect(tasks.length).to.equal(0);\n  });\n  it('should update a task', async () => {\n    const task = await Task.create({\n      name: 'Old Task Name'\n    });\n    const response = await request(app).put(`/tasks/${task.id}`).send({\n      name: 'Updated Task Name'\n    });\n    expect(response.status).to.equal(200);\n    expect(response.body.name).to.equal('Updated Task Name');\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1ZXN0IiwicmVxdWlyZSIsImV4cHJlc3MiLCJib2R5UGFyc2VyIiwidGFza1JvdXRlcyIsInNlcXVlbGl6ZSIsIlRhc2siLCJleHBlY3QiLCJhcHAiLCJ1c2UiLCJqc29uIiwiZGVzY3JpYmUiLCJiZWZvcmUiLCJzeW5jIiwiZm9yY2UiLCJiZWZvcmVFYWNoIiwiZGVzdHJveSIsIndoZXJlIiwiaXQiLCJjcmVhdGUiLCJuYW1lIiwicmVzcG9uc2UiLCJnZXQiLCJzdGF0dXMiLCJ0byIsImVxdWFsIiwiYm9keSIsImxlbmd0aCIsInBvc3QiLCJzZW5kIiwidGFzayIsImRlbGV0ZSIsImlkIiwidGFza3MiLCJmaW5kQWxsIiwicHV0Il0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEZyYW5jaXNjb1xcRG9jdW1lbnRzXFxSYXRoZXJsYWJzXFxJbnRlcm5zaGlwXFxnZXN0b3ItYXBwXFx0YXNrLW1hbmFnZXItYmFja2VuZFxcdGVzdFxcIiwic291cmNlcyI6WyJ0YXNrLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcmVxdWVzdCA9IHJlcXVpcmUoJ3N1cGVydGVzdCcpO1xyXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcclxuY29uc3QgdGFza1JvdXRlcyA9IHJlcXVpcmUoJy4uL3JvdXRlcy90YXNrcycpO1xyXG5jb25zdCBzZXF1ZWxpemUgPSByZXF1aXJlKCcuLi9jb25maWcvZGInKTtcclxuY29uc3QgVGFzayA9IHJlcXVpcmUoJy4uL21vZGVscy9UYXNrJyk7XHJcbmNvbnN0IHsgZXhwZWN0IH0gPSByZXF1aXJlKCdjaGFpJyk7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xyXG5hcHAudXNlKCcvdGFza3MnLCB0YXNrUm91dGVzKTtcclxuXHJcbmRlc2NyaWJlKCdUYXNrcyBBUEknLCAoKSA9PiB7XHJcbiAgYmVmb3JlKGFzeW5jICgpID0+IHtcclxuICAgIGF3YWl0IHNlcXVlbGl6ZS5zeW5jKHsgZm9yY2U6IHRydWUgfSk7XHJcbiAgfSk7XHJcblxyXG4gIC8vbGltcGlhIGxhIERCIGRlIHRlc3RpbmdcclxuICBiZWZvcmVFYWNoKGFzeW5jICgpID0+IHtcclxuICAgIGF3YWl0IFRhc2suZGVzdHJveSh7IHdoZXJlOiB7fSB9KTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3Nob3VsZCBnZXQgYWxsIHRhc2tzJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgYXdhaXQgVGFzay5jcmVhdGUoeyBuYW1lOiAnVGVzdCBUYXNrIDEnIH0pO1xyXG4gICAgYXdhaXQgVGFzay5jcmVhdGUoeyBuYW1lOiAnVGVzdCBUYXNrIDInIH0pO1xyXG5cclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdChhcHApLmdldCgnL3Rhc2tzJyk7XHJcbiAgICBleHBlY3QocmVzcG9uc2Uuc3RhdHVzKS50by5lcXVhbCgyMDApO1xyXG4gICAgZXhwZWN0KHJlc3BvbnNlLmJvZHkubGVuZ3RoKS50by5lcXVhbCgyKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3Nob3VsZCBjcmVhdGUgYSBuZXcgdGFzaycsIGFzeW5jICgpID0+IHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdChhcHApXHJcbiAgICAgIC5wb3N0KCcvdGFza3MnKVxyXG4gICAgICAuc2VuZCh7IG5hbWU6ICdOZXcgVGFzaycgfSk7XHJcblxyXG4gICAgZXhwZWN0KHJlc3BvbnNlLnN0YXR1cykudG8uZXF1YWwoMjAxKTtcclxuICAgIGV4cGVjdChyZXNwb25zZS5ib2R5Lm5hbWUpLnRvLmVxdWFsKCdOZXcgVGFzaycpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnc2hvdWxkIGRlbGV0ZSBhIHRhc2snLCBhc3luYyAoKSA9PiB7XHJcbiAgICBjb25zdCB0YXNrID0gYXdhaXQgVGFzay5jcmVhdGUoeyBuYW1lOiAnVGFzayB0byBEZWxldGUnIH0pO1xyXG5cclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdChhcHApLmRlbGV0ZShgL3Rhc2tzLyR7dGFzay5pZH1gKTtcclxuICAgIGV4cGVjdChyZXNwb25zZS5zdGF0dXMpLnRvLmVxdWFsKDIwMCk7XHJcblxyXG4gICAgY29uc3QgdGFza3MgPSBhd2FpdCBUYXNrLmZpbmRBbGwoKTtcclxuICAgIGV4cGVjdCh0YXNrcy5sZW5ndGgpLnRvLmVxdWFsKDApO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnc2hvdWxkIHVwZGF0ZSBhIHRhc2snLCBhc3luYyAoKSA9PiB7XHJcbiAgICBjb25zdCB0YXNrID0gYXdhaXQgVGFzay5jcmVhdGUoeyBuYW1lOiAnT2xkIFRhc2sgTmFtZScgfSk7XHJcblxyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0KGFwcClcclxuICAgICAgLnB1dChgL3Rhc2tzLyR7dGFzay5pZH1gKVxyXG4gICAgICAuc2VuZCh7IG5hbWU6ICdVcGRhdGVkIFRhc2sgTmFtZScgfSk7XHJcblxyXG4gICAgZXhwZWN0KHJlc3BvbnNlLnN0YXR1cykudG8uZXF1YWwoMjAwKTtcclxuICAgIGV4cGVjdChyZXNwb25zZS5ib2R5Lm5hbWUpLnRvLmVxdWFsKCdVcGRhdGVkIFRhc2sgTmFtZScpO1xyXG4gIH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxXQUFXLENBQUM7QUFDcEMsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1FLFVBQVUsR0FBR0YsT0FBTyxDQUFDLGFBQWEsQ0FBQztBQUN6QyxNQUFNRyxVQUFVLEdBQUdILE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQztBQUM3QyxNQUFNSSxTQUFTLEdBQUdKLE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFDekMsTUFBTUssSUFBSSxHQUFHTCxPQUFPLENBQUMsZ0JBQWdCLENBQUM7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","map":{"version":3,"names":["request","require","express","bodyParser","taskRoutes","sequelize","Task","expect","app","use","json","describe","before","sync","force","beforeEach","destroy","where","it","create","name","response","get","status","to","equal","body","length","post","send","task","delete","id","tasks","findAll","put"],"sourceRoot":"C:\\Users\\Francisco\\Documents\\Ratherlabs\\Internship\\gestor-app\\task-manager-backend\\test\\","sources":["task.test.js"],"sourcesContent":["const request = require('supertest');\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst taskRoutes = require('../routes/tasks');\r\nconst sequelize = require('../config/db');\r\nconst Task = require('../models/Task');\r\nconst { expect } = require('chai');\r\n\r\nconst app = express();\r\napp.use(bodyParser.json());\r\napp.use('/tasks', taskRoutes);\r\n\r\ndescribe('Tasks API', () => {\r\n  before(async () => {\r\n    await sequelize.sync({ force: true });\r\n  });\r\n\r\n  //limpia la DB de testing\r\n  beforeEach(async () => {\r\n    await Task.destroy({ where: {} });\r\n  });\r\n\r\n  it('should get all tasks', async () => {\r\n    await Task.create({ name: 'Test Task 1' });\r\n    await Task.create({ name: 'Test Task 2' });\r\n\r\n    const response = await request(app).get('/tasks');\r\n    expect(response.status).to.equal(200);\r\n    expect(response.body.length).to.equal(2);\r\n  });\r\n\r\n  it('should create a new task', async () => {\r\n    const response = await request(app)\r\n      .post('/tasks')\r\n      .send({ name: 'New Task' });\r\n\r\n    expect(response.status).to.equal(201);\r\n    expect(response.body.name).to.equal('New Task');\r\n  });\r\n\r\n  it('should delete a task', async () => {\r\n    const task = await Task.create({ name: 'Task to Delete' });\r\n\r\n    const response = await request(app).delete(`/tasks/${task.id}`);\r\n    expect(response.status).to.equal(200);\r\n\r\n    const tasks = await Task.findAll();\r\n    expect(tasks.length).to.equal(0);\r\n  });\r\n\r\n  it('should update a task', async () => {\r\n    const task = await Task.create({ name: 'Old Task Name' });\r\n\r\n    const response = await request(app)\r\n      .put(`/tasks/${task.id}`)\r\n      .send({ name: 'Updated Task Name' });\r\n\r\n    expect(response.status).to.equal(200);\r\n    expect(response.body.name).to.equal('Updated Task Name');\r\n  });\r\n});\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1723478281711},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\",\"filename\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\\\\routes\\\\tasks.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst taskController = require('../controllers/taskController');\n\n// Ruta para obtener todas las tareas\nrouter.get('/', taskController.getAllTasks);\n\n// Ruta para añadir una nueva tarea\nrouter.post('/', taskController.createTask);\n\n// Ruta para eliminar una tarea\nrouter.delete('/:id', taskController.deleteTask);\n\n// Ruta para actualizar una tarea\nrouter.put('/:id', taskController.updateTask);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsInRhc2tDb250cm9sbGVyIiwiZ2V0IiwiZ2V0QWxsVGFza3MiLCJwb3N0IiwiY3JlYXRlVGFzayIsImRlbGV0ZSIsImRlbGV0ZVRhc2siLCJwdXQiLCJ1cGRhdGVUYXNrIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxGcmFuY2lzY29cXERvY3VtZW50c1xcUmF0aGVybGFic1xcSW50ZXJuc2hpcFxcZ2VzdG9yLWFwcFxcdGFzay1tYW5hZ2VyLWJhY2tlbmRcXHJvdXRlc1xcIiwic291cmNlcyI6WyJ0YXNrcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5jb25zdCB0YXNrQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL3Rhc2tDb250cm9sbGVyJyk7XHJcblxyXG4vLyBSdXRhIHBhcmEgb2J0ZW5lciB0b2RhcyBsYXMgdGFyZWFzXHJcbnJvdXRlci5nZXQoJy8nLCB0YXNrQ29udHJvbGxlci5nZXRBbGxUYXNrcyk7XHJcblxyXG4vLyBSdXRhIHBhcmEgYcOxYWRpciB1bmEgbnVldmEgdGFyZWFcclxucm91dGVyLnBvc3QoJy8nLCB0YXNrQ29udHJvbGxlci5jcmVhdGVUYXNrKTtcclxuXHJcbi8vIFJ1dGEgcGFyYSBlbGltaW5hciB1bmEgdGFyZWFcclxucm91dGVyLmRlbGV0ZSgnLzppZCcsIHRhc2tDb250cm9sbGVyLmRlbGV0ZVRhc2spO1xyXG5cclxuLy8gUnV0YSBwYXJhIGFjdHVhbGl6YXIgdW5hIHRhcmVhXHJcbnJvdXRlci5wdXQoJy86aWQnLCB0YXNrQ29udHJvbGxlci51cGRhdGVUYXNrKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUNsQyxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBTSxDQUFDLENBQUM7QUFDL0IsTUFBTUMsY0FBYyxHQUFHSCxPQUFPLENBQUMsK0JBQStCLENBQUM7O0FBRS9EO0FBQ0FDLE1BQU0sQ0FBQ0csR0FBRyxDQUFDLEdBQUcsRUFBRUQsY0FBYyxDQUFDRSxXQUFXLENBQUM7O0FBRTNDO0FBQ0FKLE1BQU0sQ0FBQ0ssSUFBSSxDQUFDLEdBQUcsRUFBRUgsY0FBYyxDQUFDSSxVQUFVLENBQUM7O0FBRTNDO0FBQ0FOLE1BQU0sQ0FBQ08sTUFBTSxDQUFDLE1BQU0sRUFBRUwsY0FBYyxDQUFDTSxVQUFVLENBQUM7O0FBRWhEO0FBQ0FSLE1BQU0sQ0FBQ1MsR0FBRyxDQUFDLE1BQU0sRUFBRVAsY0FBYyxDQUFDUSxVQUFVLENBQUM7QUFFN0NDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHWixNQUFNIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["express","require","router","Router","taskController","get","getAllTasks","post","createTask","delete","deleteTask","put","updateTask","module","exports"],"sourceRoot":"C:\\Users\\Francisco\\Documents\\Ratherlabs\\Internship\\gestor-app\\task-manager-backend\\routes\\","sources":["tasks.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst taskController = require('../controllers/taskController');\r\n\r\n// Ruta para obtener todas las tareas\r\nrouter.get('/', taskController.getAllTasks);\r\n\r\n// Ruta para añadir una nueva tarea\r\nrouter.post('/', taskController.createTask);\r\n\r\n// Ruta para eliminar una tarea\r\nrouter.delete('/:id', taskController.deleteTask);\r\n\r\n// Ruta para actualizar una tarea\r\nrouter.put('/:id', taskController.updateTask);\r\n\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,cAAc,GAAGH,OAAO,CAAC,+BAA+B,CAAC;;AAE/D;AACAC,MAAM,CAACG,GAAG,CAAC,GAAG,EAAED,cAAc,CAACE,WAAW,CAAC;;AAE3C;AACAJ,MAAM,CAACK,IAAI,CAAC,GAAG,EAAEH,cAAc,CAACI,UAAU,CAAC;;AAE3C;AACAN,MAAM,CAACO,MAAM,CAAC,MAAM,EAAEL,cAAc,CAACM,UAAU,CAAC;;AAEhD;AACAR,MAAM,CAACS,GAAG,CAAC,MAAM,EAAEP,cAAc,CAACQ,UAAU,CAAC;AAE7CC,MAAM,CAACC,OAAO,GAAGZ,MAAM","ignoreList":[]}},"mtime":1723478281709},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\",\"filename\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\\\\controllers\\\\taskController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"const taskService = require('../services/taskService');\n\n// Obtener todas las tareas\nconst getAllTasks = async (req, res) => {\n  try {\n    const tasks = await taskService.getAllTasks();\n    res.json(tasks);\n  } catch (error) {\n    console.error('Error al obtener las tareas:', error);\n    res.status(500).send('Error al obtener las tareas');\n  }\n};\n\n// Crear una nueva tarea\nconst createTask = async (req, res) => {\n  const {\n    name\n  } = req.body;\n  try {\n    if (!name) {\n      return res.status(400).json({\n        error: 'El nombre de la tarea es requerido'\n      });\n    }\n    const newTask = await taskService.createTask(name);\n    res.status(201).json(newTask);\n  } catch (error) {\n    console.error('Error al crear la tarea:', error);\n    res.status(500).send('Error al crear la tarea');\n  }\n};\n\n// Eliminar una tarea\nconst deleteTask = async (req, res) => {\n  const {\n    id\n  } = req.params;\n\n  // Validar que el ID no esté vacío y que sea un número entero positivo\n  if (!id || isNaN(parseInt(id)) || parseInt(id) <= 0) {\n    return res.status(400).json({\n      error: 'ID de tarea inválido'\n    });\n  }\n  try {\n    const deleted = await taskService.deleteTaskById(id);\n    if (deleted) {\n      res.sendStatus(200);\n    } else {\n      res.status(404).json({\n        error: 'Tarea no encontrada'\n      });\n    }\n  } catch (error) {\n    console.error('Error al eliminar la tarea:', error);\n    res.status(500).send('Error al eliminar la tarea');\n  }\n};\n\n// Actualizar una tarea\nconst updateTask = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const {\n    name\n  } = req.body;\n\n  // Validar que el ID no esté vacío y que sea un número entero positivo\n  if (!id || isNaN(parseInt(id)) || parseInt(id) <= 0) {\n    return res.status(400).json({\n      error: 'ID de tarea inválido'\n    });\n  }\n\n  // Validar que el nombre no esté vacío\n  if (!name) {\n    return res.status(400).json({\n      error: 'El nombre de la tarea es requerido'\n    });\n  }\n  try {\n    const updatedTask = await taskService.updateTaskById(id, name);\n    if (updatedTask) {\n      res.json(updatedTask);\n    } else {\n      res.status(404).json({\n        error: 'Tarea no encontrada'\n      });\n    }\n  } catch (error) {\n    console.error('Error al actualizar la tarea:', error);\n    res.status(500).send('Error al actualizar la tarea');\n  }\n};\nmodule.exports = {\n  getAllTasks,\n  createTask,\n  deleteTask,\n  updateTask\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ0YXNrU2VydmljZSIsInJlcXVpcmUiLCJnZXRBbGxUYXNrcyIsInJlcSIsInJlcyIsInRhc2tzIiwianNvbiIsImVycm9yIiwiY29uc29sZSIsInN0YXR1cyIsInNlbmQiLCJjcmVhdGVUYXNrIiwibmFtZSIsImJvZHkiLCJuZXdUYXNrIiwiZGVsZXRlVGFzayIsImlkIiwicGFyYW1zIiwiaXNOYU4iLCJwYXJzZUludCIsImRlbGV0ZWQiLCJkZWxldGVUYXNrQnlJZCIsInNlbmRTdGF0dXMiLCJ1cGRhdGVUYXNrIiwidXBkYXRlZFRhc2siLCJ1cGRhdGVUYXNrQnlJZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRnJhbmNpc2NvXFxEb2N1bWVudHNcXFJhdGhlcmxhYnNcXEludGVybnNoaXBcXGdlc3Rvci1hcHBcXHRhc2stbWFuYWdlci1iYWNrZW5kXFxjb250cm9sbGVyc1xcIiwic291cmNlcyI6WyJ0YXNrQ29udHJvbGxlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0YXNrU2VydmljZSA9IHJlcXVpcmUoJy4uL3NlcnZpY2VzL3Rhc2tTZXJ2aWNlJyk7XHJcblxyXG4vLyBPYnRlbmVyIHRvZGFzIGxhcyB0YXJlYXNcclxuY29uc3QgZ2V0QWxsVGFza3MgPSBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgdGFza3MgPSBhd2FpdCB0YXNrU2VydmljZS5nZXRBbGxUYXNrcygpO1xyXG4gICAgcmVzLmpzb24odGFza3MpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBhbCBvYnRlbmVyIGxhcyB0YXJlYXM6JywgZXJyb3IpO1xyXG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ0Vycm9yIGFsIG9idGVuZXIgbGFzIHRhcmVhcycpO1xyXG4gIH1cclxufTtcclxuXHJcbi8vIENyZWFyIHVuYSBudWV2YSB0YXJlYVxyXG5jb25zdCBjcmVhdGVUYXNrID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyBuYW1lIH0gPSByZXEuYm9keTtcclxuICB0cnkge1xyXG4gICAgaWYgKCFuYW1lKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnRWwgbm9tYnJlIGRlIGxhIHRhcmVhIGVzIHJlcXVlcmlkbycgfSk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBuZXdUYXNrID0gYXdhaXQgdGFza1NlcnZpY2UuY3JlYXRlVGFzayhuYW1lKTtcclxuICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKG5ld1Rhc2spO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBhbCBjcmVhciBsYSB0YXJlYTonLCBlcnJvcik7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnRXJyb3IgYWwgY3JlYXIgbGEgdGFyZWEnKTtcclxuICB9XHJcbn07XHJcblxyXG4vLyBFbGltaW5hciB1bmEgdGFyZWFcclxuY29uc3QgZGVsZXRlVGFzayA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XHJcblxyXG4gIC8vIFZhbGlkYXIgcXVlIGVsIElEIG5vIGVzdMOpIHZhY8OtbyB5IHF1ZSBzZWEgdW4gbsO6bWVybyBlbnRlcm8gcG9zaXRpdm9cclxuICBpZiAoIWlkIHx8IGlzTmFOKHBhcnNlSW50KGlkKSkgfHwgcGFyc2VJbnQoaWQpIDw9IDApIHtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnSUQgZGUgdGFyZWEgaW52w6FsaWRvJyB9KTtcclxuICB9XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBkZWxldGVkID0gYXdhaXQgdGFza1NlcnZpY2UuZGVsZXRlVGFza0J5SWQoaWQpO1xyXG4gICAgaWYgKGRlbGV0ZWQpIHtcclxuICAgICAgcmVzLnNlbmRTdGF0dXMoMjAwKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6ICdUYXJlYSBubyBlbmNvbnRyYWRhJyB9KTtcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgYWwgZWxpbWluYXIgbGEgdGFyZWE6JywgZXJyb3IpO1xyXG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ0Vycm9yIGFsIGVsaW1pbmFyIGxhIHRhcmVhJyk7XHJcbiAgfVxyXG59O1xyXG5cclxuLy8gQWN0dWFsaXphciB1bmEgdGFyZWFcclxuY29uc3QgdXBkYXRlVGFzayA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgY29uc3QgeyBuYW1lIH0gPSByZXEuYm9keTtcclxuXHJcbiAgLy8gVmFsaWRhciBxdWUgZWwgSUQgbm8gZXN0w6kgdmFjw61vIHkgcXVlIHNlYSB1biBuw7ptZXJvIGVudGVybyBwb3NpdGl2b1xyXG4gIGlmICghaWQgfHwgaXNOYU4ocGFyc2VJbnQoaWQpKSB8fCBwYXJzZUludChpZCkgPD0gMCkge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdJRCBkZSB0YXJlYSBpbnbDoWxpZG8nIH0pO1xyXG4gIH1cclxuXHJcbiAgLy8gVmFsaWRhciBxdWUgZWwgbm9tYnJlIG5vIGVzdMOpIHZhY8Otb1xyXG4gIGlmICghbmFtZSkge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdFbCBub21icmUgZGUgbGEgdGFyZWEgZXMgcmVxdWVyaWRvJyB9KTtcclxuICB9XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB1cGRhdGVkVGFzayA9IGF3YWl0IHRhc2tTZXJ2aWNlLnVwZGF0ZVRhc2tCeUlkKGlkLCBuYW1lKTtcclxuICAgIGlmICh1cGRhdGVkVGFzaykge1xyXG4gICAgICByZXMuanNvbih1cGRhdGVkVGFzayk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXMuc3RhdHVzKDQwNCkuanNvbih7IGVycm9yOiAnVGFyZWEgbm8gZW5jb250cmFkYScgfSk7XHJcbiAgICB9XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFsIGFjdHVhbGl6YXIgbGEgdGFyZWE6JywgZXJyb3IpO1xyXG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ0Vycm9yIGFsIGFjdHVhbGl6YXIgbGEgdGFyZWEnKTtcclxuICB9XHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBnZXRBbGxUYXNrcyxcclxuICBjcmVhdGVUYXNrLFxyXG4gIGRlbGV0ZVRhc2ssXHJcbiAgdXBkYXRlVGFzayxcclxufTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxXQUFXLEdBQUdDLE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQzs7QUFFdEQ7QUFDQSxNQUFNQyxXQUFXLEdBQUcsTUFBQUEsQ0FBT0MsR0FBRyxFQUFFQyxHQUFHLEtBQUs7RUFDdEMsSUFBSTtJQUNGLE1BQU1DLEtBQUssR0FBRyxNQUFNTCxXQUFXLENBQUNFLFdBQVcsQ0FBQyxDQUFDO0lBQzdDRSxHQUFHLENBQUNFLElBQUksQ0FBQ0QsS0FBSyxDQUFDO0VBQ2pCLENBQUMsQ0FBQyxPQUFPRSxLQUFLLEVBQUU7SUFDZEMsT0FBTyxDQUFDRCxLQUFLLENBQUMsOEJBQThCLEVBQUVBLEtBQUssQ0FBQztJQUNwREgsR0FBRyxDQUFDSyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQyw2QkFBNkIsQ0FBQztFQUNyRDtBQUNGLENBQUM7O0FBRUQ7QUFDQSxNQUFNQyxVQUFVLEdBQUcsTUFBQUEsQ0FBT1IsR0FBRyxFQUFFQyxHQUFHLEtBQUs7RUFDckMsTUFBTTtJQUFFUTtFQUFLLENBQUMsR0FBR1QsR0FBRyxDQUFDVSxJQUFJO0VBQ3pCLElBQUk7SUFDRixJQUFJLENBQUNELElBQUksRUFBRTtNQUNULE9B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","map":{"version":3,"names":["taskService","require","getAllTasks","req","res","tasks","json","error","console","status","send","createTask","name","body","newTask","deleteTask","id","params","isNaN","parseInt","deleted","deleteTaskById","sendStatus","updateTask","updatedTask","updateTaskById","module","exports"],"sourceRoot":"C:\\Users\\Francisco\\Documents\\Ratherlabs\\Internship\\gestor-app\\task-manager-backend\\controllers\\","sources":["taskController.js"],"sourcesContent":["const taskService = require('../services/taskService');\r\n\r\n// Obtener todas las tareas\r\nconst getAllTasks = async (req, res) => {\r\n  try {\r\n    const tasks = await taskService.getAllTasks();\r\n    res.json(tasks);\r\n  } catch (error) {\r\n    console.error('Error al obtener las tareas:', error);\r\n    res.status(500).send('Error al obtener las tareas');\r\n  }\r\n};\r\n\r\n// Crear una nueva tarea\r\nconst createTask = async (req, res) => {\r\n  const { name } = req.body;\r\n  try {\r\n    if (!name) {\r\n      return res.status(400).json({ error: 'El nombre de la tarea es requerido' });\r\n    }\r\n    const newTask = await taskService.createTask(name);\r\n    res.status(201).json(newTask);\r\n  } catch (error) {\r\n    console.error('Error al crear la tarea:', error);\r\n    res.status(500).send('Error al crear la tarea');\r\n  }\r\n};\r\n\r\n// Eliminar una tarea\r\nconst deleteTask = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  // Validar que el ID no esté vacío y que sea un número entero positivo\r\n  if (!id || isNaN(parseInt(id)) || parseInt(id) <= 0) {\r\n    return res.status(400).json({ error: 'ID de tarea inválido' });\r\n  }\r\n\r\n  try {\r\n    const deleted = await taskService.deleteTaskById(id);\r\n    if (deleted) {\r\n      res.sendStatus(200);\r\n    } else {\r\n      res.status(404).json({ error: 'Tarea no encontrada' });\r\n    }\r\n  } catch (error) {\r\n    console.error('Error al eliminar la tarea:', error);\r\n    res.status(500).send('Error al eliminar la tarea');\r\n  }\r\n};\r\n\r\n// Actualizar una tarea\r\nconst updateTask = async (req, res) => {\r\n  const { id } = req.params;\r\n  const { name } = req.body;\r\n\r\n  // Validar que el ID no esté vacío y que sea un número entero positivo\r\n  if (!id || isNaN(parseInt(id)) || parseInt(id) <= 0) {\r\n    return res.status(400).json({ error: 'ID de tarea inválido' });\r\n  }\r\n\r\n  // Validar que el nombre no esté vacío\r\n  if (!name) {\r\n    return res.status(400).json({ error: 'El nombre de la tarea es requerido' });\r\n  }\r\n\r\n  try {\r\n    const updatedTask = await taskService.updateTaskById(id, name);\r\n    if (updatedTask) {\r\n      res.json(updatedTask);\r\n    } else {\r\n      res.status(404).json({ error: 'Tarea no encontrada' });\r\n    }\r\n  } catch (error) {\r\n    console.error('Error al actualizar la tarea:', error);\r\n    res.status(500).send('Error al actualizar la tarea');\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  getAllTasks,\r\n  createTask,\r\n  deleteTask,\r\n  updateTask,\r\n};\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1723478276788},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\\\\services\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\",\"filename\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\\\\services\\\\taskService.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"const Task = require('../models/Task');\n\n//Task es un sequelize model object\n// Obtener todas las tareas\nconst getAllTasks = async () => {\n  return await Task.findAll();\n};\n\n// Crear una nueva tarea\nconst createTask = async name => {\n  return await Task.create({\n    name\n  });\n};\n\n// Eliminar una tarea por ID\nconst deleteTaskById = async id => {\n  const task = await Task.destroy({\n    where: {\n      id\n    }\n  });\n  return task > 0; // Devuelve true si se eliminó al menos una tarea\n};\n\n// Actualizar una tarea por ID\nconst updateTaskById = async (id, name) => {\n  const [updated] = await Task.update({\n    name\n  }, {\n    where: {\n      id\n    },\n    returning: true\n  });\n  if (updated) {\n    return Task.findByPk(id);\n  }\n  return null;\n};\nmodule.exports = {\n  getAllTasks,\n  createTask,\n  deleteTaskById,\n  updateTaskById\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUYXNrIiwicmVxdWlyZSIsImdldEFsbFRhc2tzIiwiZmluZEFsbCIsImNyZWF0ZVRhc2siLCJuYW1lIiwiY3JlYXRlIiwiZGVsZXRlVGFza0J5SWQiLCJpZCIsInRhc2siLCJkZXN0cm95Iiwid2hlcmUiLCJ1cGRhdGVUYXNrQnlJZCIsInVwZGF0ZWQiLCJ1cGRhdGUiLCJyZXR1cm5pbmciLCJmaW5kQnlQayIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRnJhbmNpc2NvXFxEb2N1bWVudHNcXFJhdGhlcmxhYnNcXEludGVybnNoaXBcXGdlc3Rvci1hcHBcXHRhc2stbWFuYWdlci1iYWNrZW5kXFxzZXJ2aWNlc1xcIiwic291cmNlcyI6WyJ0YXNrU2VydmljZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBUYXNrID0gcmVxdWlyZSgnLi4vbW9kZWxzL1Rhc2snKTtcclxuXHJcbi8vVGFzayBlcyB1biBzZXF1ZWxpemUgbW9kZWwgb2JqZWN0XHJcbi8vIE9idGVuZXIgdG9kYXMgbGFzIHRhcmVhc1xyXG5jb25zdCBnZXRBbGxUYXNrcyA9IGFzeW5jICgpID0+IHtcclxuICByZXR1cm4gYXdhaXQgVGFzay5maW5kQWxsKCk7XHJcbn07XHJcblxyXG4vLyBDcmVhciB1bmEgbnVldmEgdGFyZWFcclxuY29uc3QgY3JlYXRlVGFzayA9IGFzeW5jIChuYW1lKSA9PiB7XHJcbiAgcmV0dXJuIGF3YWl0IFRhc2suY3JlYXRlKHsgbmFtZSB9KTtcclxufTtcclxuXHJcbi8vIEVsaW1pbmFyIHVuYSB0YXJlYSBwb3IgSURcclxuY29uc3QgZGVsZXRlVGFza0J5SWQgPSBhc3luYyAoaWQpID0+IHtcclxuICBjb25zdCB0YXNrID0gYXdhaXQgVGFzay5kZXN0cm95KHsgd2hlcmU6IHsgaWQgfSB9KTtcclxuICByZXR1cm4gdGFzayA+IDA7IC8vIERldnVlbHZlIHRydWUgc2kgc2UgZWxpbWluw7MgYWwgbWVub3MgdW5hIHRhcmVhXHJcbn07XHJcblxyXG4vLyBBY3R1YWxpemFyIHVuYSB0YXJlYSBwb3IgSURcclxuY29uc3QgdXBkYXRlVGFza0J5SWQgPSBhc3luYyAoaWQsIG5hbWUpID0+IHtcclxuICBjb25zdCBbdXBkYXRlZF0gPSBhd2FpdCBUYXNrLnVwZGF0ZSh7IG5hbWUgfSwgeyB3aGVyZTogeyBpZCB9LCByZXR1cm5pbmc6IHRydWUgfSk7XHJcbiAgaWYgKHVwZGF0ZWQpIHtcclxuICAgIHJldHVybiBUYXNrLmZpbmRCeVBrKGlkKTtcclxuICB9XHJcbiAgcmV0dXJuIG51bGw7XHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBnZXRBbGxUYXNrcyxcclxuICBjcmVhdGVUYXNrLFxyXG4gIGRlbGV0ZVRhc2tCeUlkLFxyXG4gIHVwZGF0ZVRhc2tCeUlkLFxyXG59O1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLGdCQUFnQixDQUFDOztBQUV0QztBQUNBO0FBQ0EsTUFBTUMsV0FBVyxHQUFHLE1BQUFBLENBQUEsS0FBWTtFQUM5QixPQUFPLE1BQU1GLElBQUksQ0FBQ0csT0FBTyxDQUFDLENBQUM7QUFDN0IsQ0FBQzs7QUFFRDtBQUNBLE1BQU1DLFVBQVUsR0FBRyxNQUFPQyxJQUFJLElBQUs7RUFDakMsT0FBTyxNQUFNTCxJQUFJLENBQUNNLE1BQU0sQ0FBQztJQUFFRDtFQUFLLENBQUMsQ0FBQztBQUNwQyxDQUFDOztBQUVEO0FBQ0EsTUFBTUUsY0FBYyxHQUFHLE1BQU9DLEVBQUUsSUFBSztFQUNuQyxNQUFNQyxJQUFJLEdBQUcsTUFBTVQsSUFBSSxDQUFDVSxPQUFPLENBQUM7SUFBRUMsS0FBSyxFQUFFO01BQUVIO0lBQUc7RUFBRSxDQUFDLENBQUM7RUFDbEQsT0FBT0MsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ25CLENBQUM7O0FBRUQ7QUFDQSxNQUFNRyxjQUFjLEdBQUcsTUFBQUEsQ0FBT0osRUFBRSxFQUFFSCxJQUFJLEtBQUs7RUFDekMsTUFBTSxDQUFDUSxPQUFPLENBQUMsR0FBRyxNQUFNYixJQUFJLENBQUNjLE1BQU0sQ0FBQztJQUFFVDtFQUFLLENBQUMsRUFBRTtJQUFFTSxLQUFLLEVBQUU7TUFBRUg7SUFBRyxDQUFDO0lBQUVPLFNBQVMsRUFBRTtFQUFLLENBQUMsQ0FBQztFQUNqRixJQUFJRixPQUFPLEVBQUU7SUFDWCxPQUFPYixJQUFJLENBQUNnQixRQUFRLENBQUNSLEVBQUUsQ0FBQztFQUMxQjtFQUNBLE9BQU8sSUFBSTtBQUNiLENBQUM7QUFFRFMsTUFBTSxDQUFDQyxPQUFPLEdBQUc7RUFDZmhCLFdBQVc7RUFDWEUsVUFBVTtFQUNWRyxjQUFjO0VBQ2RLO0FBQ0YsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["Task","require","getAllTasks","findAll","createTask","name","create","deleteTaskById","id","task","destroy","where","updateTaskById","updated","update","returning","findByPk","module","exports"],"sourceRoot":"C:\\Users\\Francisco\\Documents\\Ratherlabs\\Internship\\gestor-app\\task-manager-backend\\services\\","sources":["taskService.js"],"sourcesContent":["const Task = require('../models/Task');\r\n\r\n//Task es un sequelize model object\r\n// Obtener todas las tareas\r\nconst getAllTasks = async () => {\r\n  return await Task.findAll();\r\n};\r\n\r\n// Crear una nueva tarea\r\nconst createTask = async (name) => {\r\n  return await Task.create({ name });\r\n};\r\n\r\n// Eliminar una tarea por ID\r\nconst deleteTaskById = async (id) => {\r\n  const task = await Task.destroy({ where: { id } });\r\n  return task > 0; // Devuelve true si se eliminó al menos una tarea\r\n};\r\n\r\n// Actualizar una tarea por ID\r\nconst updateTaskById = async (id, name) => {\r\n  const [updated] = await Task.update({ name }, { where: { id }, returning: true });\r\n  if (updated) {\r\n    return Task.findByPk(id);\r\n  }\r\n  return null;\r\n};\r\n\r\nmodule.exports = {\r\n  getAllTasks,\r\n  createTask,\r\n  deleteTaskById,\r\n  updateTaskById,\r\n};\r\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,gBAAgB,CAAC;;AAEtC;AACA;AACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,OAAO,MAAMF,IAAI,CAACG,OAAO,CAAC,CAAC;AAC7B,CAAC;;AAED;AACA,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACjC,OAAO,MAAML,IAAI,CAACM,MAAM,CAAC;IAAED;EAAK,CAAC,CAAC;AACpC,CAAC;;AAED;AACA,MAAME,cAAc,GAAG,MAAOC,EAAE,IAAK;EACnC,MAAMC,IAAI,GAAG,MAAMT,IAAI,CAACU,OAAO,CAAC;IAAEC,KAAK,EAAE;MAAEH;IAAG;EAAE,CAAC,CAAC;EAClD,OAAOC,IAAI,GAAG,CAAC,CAAC,CAAC;AACnB,CAAC;;AAED;AACA,MAAMG,cAAc,GAAG,MAAAA,CAAOJ,EAAE,EAAEH,IAAI,KAAK;EACzC,MAAM,CAACQ,OAAO,CAAC,GAAG,MAAMb,IAAI,CAACc,MAAM,CAAC;IAAET;EAAK,CAAC,EAAE;IAAEM,KAAK,EAAE;MAAEH;IAAG,CAAC;IAAEO,SAAS,EAAE;EAAK,CAAC,CAAC;EACjF,IAAIF,OAAO,EAAE;IACX,OAAOb,IAAI,CAACgB,QAAQ,CAACR,EAAE,CAAC;EAC1B;EACA,OAAO,IAAI;AACb,CAAC;AAEDS,MAAM,CAACC,OAAO,GAAG;EACfhB,WAAW;EACXE,UAAU;EACVG,cAAc;EACdK;AACF,CAAC","ignoreList":[]}},"mtime":1723478281710},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\",\"filename\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\\\\models\\\\Task.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"const {\n  DataTypes\n} = require('sequelize');\nconst sequelize = require('../config/db');\n\n// Define model Task\nconst Task = sequelize.define('Task', {\n  id: {\n    type: DataTypes.INTEGER,\n    autoIncrement: true,\n    primaryKey: true\n  },\n  timestamp: {\n    type: DataTypes.DATE,\n    defaultValue: DataTypes.NOW\n  },\n  name: {\n    type: DataTypes.STRING,\n    allowNull: false\n  }\n}, {\n  timestamps: false\n});\n\n// Exportar el modelo\nmodule.exports = Task;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEYXRhVHlwZXMiLCJyZXF1aXJlIiwic2VxdWVsaXplIiwiVGFzayIsImRlZmluZSIsImlkIiwidHlwZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwicHJpbWFyeUtleSIsInRpbWVzdGFtcCIsIkRBVEUiLCJkZWZhdWx0VmFsdWUiLCJOT1ciLCJuYW1lIiwiU1RSSU5HIiwiYWxsb3dOdWxsIiwidGltZXN0YW1wcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRnJhbmNpc2NvXFxEb2N1bWVudHNcXFJhdGhlcmxhYnNcXEludGVybnNoaXBcXGdlc3Rvci1hcHBcXHRhc2stbWFuYWdlci1iYWNrZW5kXFxtb2RlbHNcXCIsInNvdXJjZXMiOlsiVGFzay5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IERhdGFUeXBlcyB9ID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XHJcbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uL2NvbmZpZy9kYicpO1xyXG5cclxuLy8gRGVmaW5lIG1vZGVsIFRhc2tcclxuY29uc3QgVGFzayA9IHNlcXVlbGl6ZS5kZWZpbmUoJ1Rhc2snLCB7XHJcbiAgaWQ6IHtcclxuICAgIHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgYXV0b0luY3JlbWVudDogdHJ1ZSxcclxuICAgIHByaW1hcnlLZXk6IHRydWUsXHJcbiAgfSxcclxuICB0aW1lc3RhbXA6IHtcclxuICAgIHR5cGU6IERhdGFUeXBlcy5EQVRFLFxyXG4gICAgZGVmYXVsdFZhbHVlOiBEYXRhVHlwZXMuTk9XLCBcclxuICB9LFxyXG4gIG5hbWU6IHtcclxuICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICBhbGxvd051bGw6IGZhbHNlLCBcclxuICB9LFxyXG59LCB7XHJcbiAgdGltZXN0YW1wczogZmFsc2UsIFxyXG59KTtcclxuXHJcbi8vIEV4cG9ydGFyIGVsIG1vZGVsb1xyXG5tb2R1bGUuZXhwb3J0cyA9IFRhc2s7XHJcbiAgIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQVUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsV0FBVyxDQUFDO0FBQzFDLE1BQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLGNBQWMsQ0FBQzs7QUFFekM7QUFDQSxNQUFNRSxJQUFJLEdBQUdELFNBQVMsQ0FBQ0UsTUFBTSxDQUFDLE1BQU0sRUFBRTtFQUNwQ0MsRUFBRSxFQUFFO0lBQ0ZDLElBQUksRUFBRU4sU0FBUyxDQUFDTyxPQUFPO0lBQ3ZCQyxhQUFhLEVBQUUsSUFBSTtJQUNuQkMsVUFBVSxFQUFFO0VBQ2QsQ0FBQztFQUNEQyxTQUFTLEVBQUU7SUFDVEosSUFBSSxFQUFFTixTQUFTLENBQUNXLElBQUk7SUFDcEJDLFlBQVksRUFBRVosU0FBUyxDQUFDYTtFQUMxQixDQUFDO0VBQ0RDLElBQUksRUFBRTtJQUNKUixJQUFJLEVBQUVOLFNBQVMsQ0FBQ2UsTUFBTTtJQUN0QkMsU0FBUyxFQUFFO0VBQ2I7QUFDRixDQUFDLEVBQUU7RUFDREMsVUFBVSxFQUFFO0FBQ2QsQ0FBQyxDQUFDOztBQUVGO0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHaEIsSUFBSSIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["DataTypes","require","sequelize","Task","define","id","type","INTEGER","autoIncrement","primaryKey","timestamp","DATE","defaultValue","NOW","name","STRING","allowNull","timestamps","module","exports"],"sourceRoot":"C:\\Users\\Francisco\\Documents\\Ratherlabs\\Internship\\gestor-app\\task-manager-backend\\models\\","sources":["Task.js"],"sourcesContent":["const { DataTypes } = require('sequelize');\r\nconst sequelize = require('../config/db');\r\n\r\n// Define model Task\r\nconst Task = sequelize.define('Task', {\r\n  id: {\r\n    type: DataTypes.INTEGER,\r\n    autoIncrement: true,\r\n    primaryKey: true,\r\n  },\r\n  timestamp: {\r\n    type: DataTypes.DATE,\r\n    defaultValue: DataTypes.NOW, \r\n  },\r\n  name: {\r\n    type: DataTypes.STRING,\r\n    allowNull: false, \r\n  },\r\n}, {\r\n  timestamps: false, \r\n});\r\n\r\n// Exportar el modelo\r\nmodule.exports = Task;\r\n  "],"mappings":"AAAA,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AAC1C,MAAMC,SAAS,GAAGD,OAAO,CAAC,cAAc,CAAC;;AAEzC;AACA,MAAME,IAAI,GAAGD,SAAS,CAACE,MAAM,CAAC,MAAM,EAAE;EACpCC,EAAE,EAAE;IACFC,IAAI,EAAEN,SAAS,CAACO,OAAO;IACvBC,aAAa,EAAE,IAAI;IACnBC,UAAU,EAAE;EACd,CAAC;EACDC,SAAS,EAAE;IACTJ,IAAI,EAAEN,SAAS,CAACW,IAAI;IACpBC,YAAY,EAAEZ,SAAS,CAACa;EAC1B,CAAC;EACDC,IAAI,EAAE;IACJR,IAAI,EAAEN,SAAS,CAACe,MAAM;IACtBC,SAAS,EAAE;EACb;AACF,CAAC,EAAE;EACDC,UAAU,EAAE;AACd,CAAC,CAAC;;AAEF;AACAC,MAAM,CAACC,OAAO,GAAGhB,IAAI","ignoreList":[]}},"mtime":1723817632440},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\",\"filename\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\\\\config\\\\db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Francisco\\\\Documents\\\\Ratherlabs\\\\Internship\\\\gestor-app\\\\task-manager-backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"const {\n  Sequelize\n} = require('sequelize');\nconst path = require('path');\nrequire('dotenv').config({\n  path: path.resolve(__dirname, '../../.env')\n});\nconst sequelize = new Sequelize({\n  dialect: 'postgres',\n  host: process.env.DB_HOST,\n  username: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME,\n  logging: false\n});\nconst authenticateDb = async () => {\n  try {\n    await sequelize.authenticate();\n    console.log('Conexión a la base de datos establecida con éxito.');\n  } catch (error) {\n    console.error('No se pudo conectar a la base de datos:', error);\n  }\n};\nauthenticateDb();\nmodule.exports = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTZXF1ZWxpemUiLCJyZXF1aXJlIiwicGF0aCIsImNvbmZpZyIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJzZXF1ZWxpemUiLCJkaWFsZWN0IiwiaG9zdCIsInByb2Nlc3MiLCJlbnYiLCJEQl9IT1NUIiwidXNlcm5hbWUiLCJEQl9VU0VSIiwicGFzc3dvcmQiLCJEQl9QQVNTV09SRCIsImRhdGFiYXNlIiwiREJfTkFNRSIsImxvZ2dpbmciLCJhdXRoZW50aWNhdGVEYiIsImF1dGhlbnRpY2F0ZSIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRnJhbmNpc2NvXFxEb2N1bWVudHNcXFJhdGhlcmxhYnNcXEludGVybnNoaXBcXGdlc3Rvci1hcHBcXHRhc2stbWFuYWdlci1iYWNrZW5kXFxjb25maWdcXCIsInNvdXJjZXMiOlsiZGIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBTZXF1ZWxpemUgfSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xyXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xyXG5yZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoeyBwYXRoOiBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4vLi4vLmVudicpIH0pO1xyXG5cclxuY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZSh7XHJcbiAgZGlhbGVjdDogJ3Bvc3RncmVzJyxcclxuICBob3N0OiBwcm9jZXNzLmVudi5EQl9IT1NULFxyXG4gIHVzZXJuYW1lOiBwcm9jZXNzLmVudi5EQl9VU0VSLFxyXG4gIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5EQl9QQVNTV09SRCxcclxuICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuREJfTkFNRSxcclxuICBsb2dnaW5nOiBmYWxzZSwgXHJcbn0pO1xyXG5cclxuY29uc3QgYXV0aGVudGljYXRlRGIgPSBhc3luYyAoKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGF3YWl0IHNlcXVlbGl6ZS5hdXRoZW50aWNhdGUoKTtcclxuICAgIGNvbnNvbGUubG9nKCdDb25leGnDs24gYSBsYSBiYXNlIGRlIGRhdG9zIGVzdGFibGVjaWRhIGNvbiDDqXhpdG8uJyk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ05vIHNlIHB1ZG8gY29uZWN0YXIgYSBsYSBiYXNlIGRlIGRhdG9zOicsIGVycm9yKTtcclxuICB9XHJcbn07XHJcblxyXG5hdXRoZW50aWNhdGVEYigpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBzZXF1ZWxpemU7Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQVUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsV0FBVyxDQUFDO0FBQzFDLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUM1QkEsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDRSxNQUFNLENBQUM7RUFBRUQsSUFBSSxFQUFFQSxJQUFJLENBQUNFLE9BQU8sQ0FBQ0MsU0FBUyxFQUFFLFlBQVk7QUFBRSxDQUFDLENBQUM7QUFFekUsTUFBTUMsU0FBUyxHQUFHLElBQUlOLFNBQVMsQ0FBQztFQUM5Qk8sT0FBTyxFQUFFLFVBQVU7RUFDbkJDLElBQUksRUFBRUMsT0FBTyxDQUFDQyxHQUFHLENBQUNDLE9BQU87RUFDekJDLFFBQVEsRUFBRUgsT0FBTyxDQUFDQyxHQUFHLENBQUNHLE9BQU87RUFDN0JDLFFBQVEsRUFBRUwsT0FBTyxDQUFDQyxHQUFHLENBQUNLLFdBQVc7RUFDakNDLFFBQVEsRUFBRVAsT0FBTyxDQUFDQyxHQUFHLENBQUNPLE9BQU87RUFDN0JDLE9BQU8sRUFBRTtBQUNYLENBQUMsQ0FBQztBQUVGLE1BQU1DLGNBQWMsR0FBRyxNQUFBQSxDQUFBLEtBQVk7RUFDakMsSUFBSTtJQUNGLE1BQU1iLFNBQVMsQ0FBQ2MsWUFBWSxDQUFDLENBQUM7SUFDOUJDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG9EQUFvRCxDQUFDO0VBQ25FLENBQUMsQ0FBQyxPQUFPQyxLQUFLLEVBQUU7SUFDZEYsT0FBTyxDQUFDRSxLQUFLLENBQUMseUNBQXlDLEVBQUVBLEtBQUssQ0FBQztFQUNqRTtBQUNGLENBQUM7QUFFREosY0FBYyxDQUFDLENBQUM7QUFFaEJLLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHbkIsU0FBUyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["Sequelize","require","path","config","resolve","__dirname","sequelize","dialect","host","process","env","DB_HOST","username","DB_USER","password","DB_PASSWORD","database","DB_NAME","logging","authenticateDb","authenticate","console","log","error","module","exports"],"sourceRoot":"C:\\Users\\Francisco\\Documents\\Ratherlabs\\Internship\\gestor-app\\task-manager-backend\\config\\","sources":["db.js"],"sourcesContent":["const { Sequelize } = require('sequelize');\r\nconst path = require('path');\r\nrequire('dotenv').config({ path: path.resolve(__dirname, '../../.env') });\r\n\r\nconst sequelize = new Sequelize({\r\n  dialect: 'postgres',\r\n  host: process.env.DB_HOST,\r\n  username: process.env.DB_USER,\r\n  password: process.env.DB_PASSWORD,\r\n  database: process.env.DB_NAME,\r\n  logging: false, \r\n});\r\n\r\nconst authenticateDb = async () => {\r\n  try {\r\n    await sequelize.authenticate();\r\n    console.log('Conexión a la base de datos establecida con éxito.');\r\n  } catch (error) {\r\n    console.error('No se pudo conectar a la base de datos:', error);\r\n  }\r\n};\r\n\r\nauthenticateDb();\r\n\r\nmodule.exports = sequelize;"],"mappings":"AAAA,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AAC1C,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5BA,OAAO,CAAC,QAAQ,CAAC,CAACE,MAAM,CAAC;EAAED,IAAI,EAAEA,IAAI,CAACE,OAAO,CAACC,SAAS,EAAE,YAAY;AAAE,CAAC,CAAC;AAEzE,MAAMC,SAAS,GAAG,IAAIN,SAAS,CAAC;EAC9BO,OAAO,EAAE,UAAU;EACnBC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,OAAO;EACzBC,QAAQ,EAAEH,OAAO,CAACC,GAAG,CAACG,OAAO;EAC7BC,QAAQ,EAAEL,OAAO,CAACC,GAAG,CAACK,WAAW;EACjCC,QAAQ,EAAEP,OAAO,CAACC,GAAG,CAACO,OAAO;EAC7BC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF,MAAMb,SAAS,CAACc,YAAY,CAAC,CAAC;IAC9BC,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;EACnE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;EACjE;AACF,CAAC;AAEDJ,cAAc,CAAC,CAAC;AAEhBK,MAAM,CAACC,OAAO,GAAGnB,SAAS","ignoreList":[]}},"mtime":1723478276787}}